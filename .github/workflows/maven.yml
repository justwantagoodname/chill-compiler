name: Functional & Performance Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      MAVEN_OPTS: "-Xss8M -Xmx8G"
      ENABLE_SSH: "true"
      SSH_HOST: "127.0.0.1"
      TESTCASE_DIR: "testcases/custom;testcases/functional;testcases/h_functional"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'oracle'
          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Install LLVM and Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential llvm clang openssh-server

      - name: Setup SSH Server
        run: |
          # Create base directory
          mkdir -p $HOME/chill-e2e
          echo "Created SSH base directory: $HOME/chill-e2e"
          
          # Configure SSH server to only listen on localhost
          sudo sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 127.0.0.1/' /etc/ssh/sshd_config
          
          # Generate SSH key for the runner
          ssh-keygen -t rsa -f ~/.ssh/id_rsa -N ""
          
          # Configure SSH authentication
          mkdir -p ~/.ssh
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          chmod 700 ~/.ssh
          
          # Update environment info
          echo "SSH_USERNAME=$USER" >> $GITHUB_ENV
          echo "SSH_BASE_DIR=$HOME/chill-e2e" >> $GITHUB_ENV
          
          # Restart SSH service
          sudo systemctl restart ssh

      - name: Install Dependencies and Build
        run: |
          mvn clean install -DskipTests -B

      - name: Run Tests
        id: run-tests
        run: |
          timeout 20m mvn clean test

      - name: Upload JUnit test reports
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: target/surefire-reports/
